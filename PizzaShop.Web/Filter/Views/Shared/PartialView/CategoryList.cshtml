@model PizzaShop.Entity.ViewModel.PaginationViewModel<PizzaShop.Entity.ViewModel.CategoryListViewModel>
@{
    ViewData["Title"] = "Menu Page";
}



<div class="flex-grow-1 p-3 overflow-auto bg-white">
    <!-- header of table  -->
    <div class="d-flex align-items-center gap-2">
        <div id="item-modifier-toggle">
            <button class="btn" style="box-shadow: none;">
                <img src="img/menu-black.svg" height="30px" alt="">
            </button>
        </div>
        <h1 id="header">Items</h1>
    </div>
    <!-- search-add-item section  -->
    <div class="d-flex align-items-center justify-content-end">
        <div id="has-search">
            <span class="fa fa-search form-control-feedback"></span>
            <input asp-for="@Model.search" class="form-control " type="search" placeholder="Search" id="searchCategoryList"
                        aria-label="Search">
        </div>
        @if((bool)Context.Items["CanDelete"]){
        
        <button type="button" class="btn deleteMultipleCategoryItems" data-bs-toggle="modal">
            <i class="bi bi-trash h5"></i>
        </button>
        }
        @if((bool)Context.Items["CanAddEdit"]){
        <button type="button" class="btn" id="NewCategoryItemBtnForCategory">         
            <i class="btn bg-primary bi bi-plus-lg text-white"><span id="NewItemSpan">New Item</span></i>
        </button>
        }
    </div>
    <!-- finish search-add-item section -->
    <!-- table  -->
    <div class="table-responsive " id="category-items">
        <table class="table">
            <thead>
                <tr>
                    <th>
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="selectAll">
                        </div>
                    </th>
                    <th scope="col">Name</th>
                    <th scope="col">ItemType</th>
                    <th scope="col">Rate</th>
                    <th scope="col">Quantity</th>
                    <th scope="col">Available</th>
                    @if((bool)Context.Items["CanAddEdit"] || (bool)Context.Items["CanDelete"])
                    {
                        <th scope="col">Action</th>
                    }
                </tr>
            </thead>
            <tbody>
                @if (Model.Items.Any())
                {
                    foreach (var item in Model.Items)
                    {
                        <tr>
                            <td><input value="@item.CategoryItemId" data-categoryItem-id="@item.CategoryItemId" class="form-check-input main-checkbox row-checkbox deleteItemCheckbox" type="checkbox"></td>

                            <td class="d-flex gap-2 align-content-center">
                                @{
                                    string url = item.ImageUrl == null ? "/images/dining-menu.png" : "" + item.ImageUrl;
                                }
                                <img src="@url"  class="rounded-circle"  width="40px" height="40px" alt="Pic" height="25">
                                <p>@item.ItemName</p>
                            </td>
                            <td class="">
                                @if (item.ItemType == "vegan")
                                {
                                    <img src="~/images/icons/vegan-icon.svg"  height="20" width="20"  alt="Vegan">
                                }
                                else if(item.ItemType == "non-veg")
                                {
                                    <img src="~/images/icons/non-veg-icon.svg" height="20" width="20" alt="Non-veg">
                                }
                                else
                                {
                                    <img src="~/images/icons/veg-icon.svg" height="20" width="20" alt="Veg">
                                }
                                
                        </td>
                        <td>@item.Price</td>
                        <td>@item.Quantity</td>
                        <td class="text-center">
                            <div class="form-check form-switch">
                            <input class="form-check-input toggle-switch" type="checkbox" @(item.IsAvailable ? "checked" : "") disabled >
                            </div>
                        </td>
                         @if((bool)Context.Items["CanAddEdit"] || (bool)Context.Items["CanDelete"]){
                        <td class="gap-3">
                        @if((bool)Context.Items["CanAddEdit"]){
                            <button class="btn  edit-btn-categoryItem" data-item-id="@item.CategoryItemId"><i class="bi bi-pen"></i></button>
                        }
                        @if((bool)Context.Items["CanDelete"]){
                            <button class="btn delete-btn-categoryItem" data-item-id="@item.CategoryItemId" data-bs-toggle="modal" data-bs-target="#deleteItemModal"><i class="bi bi-trash"></i></button>
                        }
                        </td>
                        }
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="7" class="text-center">No items found for this Category.</td>
                    </tr>
                }
            </tbody>
        </table>
        @if (Model.Items.Any())
                {
        <div class="d-flex flex-wrap  align-items-center justify-content-end">
            <div class="d-flex  align-items-center justify-content-end">
                <div>
                    <span>Items Per page: </span>
                </div>
                <div>
                    <select class="form-select ms-2 page-list" asp-for="PageSize" onchange="paginationCategoryItem()">
                        <option value="2" selected="@((Model.PageSize == 2) ? "selected" : null)">2</option>
                        <option value="5" selected="@((Model.PageSize == 5) ? "selected" : null)">5</option>
                        <option value="10" selected="@((Model.PageSize == 10) ? "selected" : null)">10</option>
                        <option value="15" selected="@((Model.PageSize == 15) ? "selected" : null)">15</option>
                    </select>
                </div>
                <div class="ms-3">
                    <span>
                        Showing 
                        <span id="startUser">@((Model.CurrentPage - 1) * Model.PageSize + 1)</span> -
                        <span id="endUser">@Math.Min(Model.CurrentPage * Model.PageSize, Model.TotalItems)</span> of
                        <span id="totalUser">@Model.TotalItems</span>   
                    </span>
                </div>
                <div class="m-2 ">
                <button class="page-link btn" type="button" id="prev2"  onclick="pageChangeCategoryItem('prev2')" @(Model.CurrentPage
                                    == 1 ? "disabled" : "") aria-label="Previous" id="previous_page">
                
                <i class="fa-solid fa-backward" aria-hidden="true"></i>
                </button>
                </div>
                <div class="m-2 ">
                    <button class="page-link btn" type="button" id="next2" onclick="pageChangeCategoryItem('next2')" @((Model.CurrentPage
                                    *Model.PageSize >= Model.TotalItems) ? "disabled" : "") aria-label="Next" id="next_page">
                        <i class="fa-solid fa-forward" aria-hidden="true"></i>
                    </button>
                </div>
            </div>
        </div>
        }
    </div>
</div>



@* Model start*@

@* delete items *@
<div class="modal fade" id="deleteItemModal" tabindex="-1" aria-labelledby="deleteModalLabel">  
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Delete Item</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="deleteForm">
                <div class="modal-body d-flex align-items-center justify-content-center flex-column">
                    <div>
                        <img src="~/images/toppng.com-warning-icon-2400x2400.png" height="50px" width="50px" alt="">
                    </div>
                    <p>Are you sure you want to delete <strong id="deleteItemName"></strong>?</p>
                    <input type="hidden" id="deleteItemId">
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger" id="confirmDelete">Delete</button>
                </div>
            </form>
        </div>
    </div>
</div>

@* edit Category Items *@



@* Add Category Items *@




@* delete multiple items *@

<div class="modal fade" id="deleteMultipleItems" tabindex="-1" aria-labelledby="deleteModalLabel" >
    <div class="modal-dialog modal-dialog-centered ">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Delete Item</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form method="post" id="deleteMultipleItemForm">
                <div class="modal-body d-flex align-items-center justify-content-center flex-column">
                    <div>
                        <img src="~/images/toppng.com-warning-icon-2400x2400.png" height="50px" width="50px" alt="">
                    </div>
                    <p>Are you sure you want to delete?</p>
                    <div id="arrayResult" hidden></div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger" id="confirmDelete">Delete</button>
                </div>
            </form>
        </div>
    </div>
</div>


@* model end *@


<script>
        
// Load modifier groups on page load
    @* loadModifierGroups(); *@
                    

    $('#searchCategoryList').on('search', function() {
        search = $(this).val();  
        fetchCategoryItems(currentCategoryId, currentPage, pageSize, search); 
    });
    function paginationCategoryItem() {
        
        var value =parseInt($("#PageSize").val());
        pageSize = value;
        search = $("#searchCategoryList").val();  
        let totalPages = Math.ceil(@Model.TotalItems / pageSize);
        if (currentPage > totalPages) {
            currentPage = totalPages > 0 ? totalPages : 1;
        }
        fetchCategoryItems(currentCategoryId,currentPage,pageSize,search);
    }

    function pageChangeCategoryItem(pageAction) {
        
        search = $("#searchCategoryList").val();   
        if (pageAction == 'prev2') {
            currentPage = currentPage === 1 ? 1 : --currentPage;
        }
        else {
            currentPage = (currentPage * pageSize) > @Model.TotalItems ? currentPage : ++currentPage;
        }
        fetchCategoryItems(currentCategoryId, currentPage, pageSize, search);
    }

    $("#NewCategoryItemBtnForCategory").click(function () {
        
        $.ajax({
            url: '/Menu/GetAddCategoryItemModal',
            type: 'GET',
            success: function (data) {
                
                console.log(data);
                $('#addCategoryItemsModal').html(data);
                $('#addCategoryItems').modal('show');
                @* $('#addCategoryItems').show(); *@

            }
        });
    });

        $(document).on('change', '.deleteItemCheckbox', function () {
            let total = $('.deleteItemCheckbox').length;
            let checked = $('.deleteItemCheckbox:checked').length;
            $('#selectAll').prop('checked', total === checked);
        });
    


    $(document).ready(function () {       
        
        $('#deleteForm').submit(function (e) {
            e.preventDefault();
            
            var itemId = $('#deleteItemId').val();
            var itemName = $('#deleteItemName').val();

            // Send data to the server using AJAX
            $.ajax({
                url: '/Menu/DeleteCategoryItem',
                type: 'POST',
                data: { itemId: itemId },
                success: function (response) {
                    // Handle success
                    if (response == true) {
                        $('#deleteItemModal').modal('hide');
                        location.reload();
                    } else {
                        $('#deleteItemModal').modal('hide');
                        location.reload();
                    }
                },
                error: function () {
                    toastr.error('Error updating item.');
                }
            });
        });

        $('.delete-btn-categoryItem').click( function () {
            var itemId = $(this).data('item-id');
            @* var itemName = $(this).closest('tr').find('td:nth-child(2)').text().trim(); *@
            $('#deleteItemId').val(itemId);
            @* $('#deleteItemName').text(itemName); *@
        });
        $('#selectAll').click(function () {
       
            if ($(this).prop('checked')) {
            $('.deleteItemCheckbox').prop('checked', true);
            } else {
            
            $('.deleteItemCheckbox').prop('checked', false);
            }
        });

        $('.deleteMultipleCategoryItems').click(function (){
            let selectedIds = [];

                $('.deleteItemCheckbox:checked').each(function(){
                    let id = $(this).data("categoryitem-id");
                    console.log(id);
                    selectedIds.push(id);
                });
            console.log(selectedIds);

            $.each(selectedIds, function(index,value){
                $("#arrayResult").append('<span class="deleteCategoryItemIds">' + value + '</span>')
            })
            if (selectedIds.length == 0) {
                toastr.error("Please select at least one item to delete.");
                return;
            }
            $('#deleteMultipleItems').modal('show');
        });

        $("#deleteMultipleItemForm").submit(function (e) {
            e.preventDefault();


            var dataId = [];
            $('.deleteCategoryItemIds').each(function(){

                let ids =parseInt($(this).text());
                dataId.push(ids); 
            })
            console.log(dataId);

            var data1 = { "dataId": dataId}

            $.ajax({
                url: '/Menu/DeleteMultipleCategoryItem',
                type: 'POST',
                data: data1 ,
                success: function (response) {
                    
                    // Handle success
                    if (response == true) {
                        $('#deleteMultipleItems').modal('hide'); 
                        location.reload();
                    } else {
                        $('#deleteMultipleItems').modal('hide');
                        location.reload();
                    }
                },
                error: function () {
                    toastr.error('Error updating item.');
                }
            });

        }); 
    });
</script>