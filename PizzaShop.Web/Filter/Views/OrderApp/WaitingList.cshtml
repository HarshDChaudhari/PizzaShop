@{
    Layout = "~/Views/Shared/_OrderAppLayout.cshtml";
    ViewData["Title"] = "Waiting List";
}
@model PizzaShop.Entity.ViewModel.OrderAppWaitingListViewModel

<style>
    /* Style the dropdown */
    .dropdown-menu {
        max-height: 200px;
        overflow-y: auto;
        border-radius: 8px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        padding: 10px;
    }

    /* Style each dropdown item */
    .dropdown-item {
        cursor: pointer;
        padding: 8px 15px;
        border-radius: 5px;
        transition: background-color 0.2s ease;
    }

    /* Hover effect for dropdown items */
    .dropdown-item:hover {
        background-color: #f8f9fa;
    }

    /* Style for checked checkboxes */
    .form-check-input:checked {
        background-color: #0d6efd;
        border-color: #0d6efd;
    }
</style>


<div class="m-1 m-md-3 my-3">
    <div class="d-flex align-items-center justify-content-between">
        <h2 class="text-primary">Waiting List</h2>
        <button class="WaitingTokenBtn btn btn-outline-primary d-flex align-items-center gap-2">
            <span class="fw-bold">+</span><span class="d-none d-md-block">Waiting Token</span>
        </button>
    </div>
    <div class="my-2 bg-white d-flex align-items-center gap-4 px-3 shadow " id="MainContentDiv"
        style="overflow-x: scroll;!important">
        <div class="sectionName border-2 border-bottom border-primary py-2 fw-semibold fs-5 d-flex align-items-center gap-1 px-2 text-nowrap"
            style=" cursor:pointer;!important">
            <span class="text-nowrap">All</span>
            @* <span
                class="text-white text-nowrap rounded-5 d-flex align-items-center px-2 "
                style="height: 25px; background-color: rgba(71, 66, 66, 0.233);">
                @Model.WaitingList.Count
            </span> *@
        </div>
        @foreach (var item in Model.SectionList)
        {
            <div class="sectionName py-2 fw-semibold fs-5 d-flex align-items-center gap-1 px-2"
                data-sectionid="@item.SectionId" style="cursor:pointer;!important"><span
                    class="text-nowrap">@item.SectionName</span>
            </div>
        }
    </div>
    <div id="LoadWaitingListContainer">
        @* @ Waiting List Partial View will load here @ *@
    </div>
</div>



<!-- Modal -->
<div id="AddWaitingBtn"></div>
<div id="EditWaitingBtn"></div>


@*token modal for delete *@
<div class="modal fade" id="TokenDeleteModal" tabindex="-1" data-bs-backdrop="static" data-bs-keyboard="false">
    <div class=" modal-dialog modal-dialog-centered">
        <div class="modal-content rounded-0">
            <div class="modal-header border-0">
                <h1 class="modal-title fs-5" id="exampleModalLabel">Delete Confirmation </h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form action="post" id="DeleteWaitingToken">
                <input type="hidden" id="waitingId">
                <div class="modal-body d-flex flex-column align-items-center justify-content-center">
                    <img width="50" src="~/images/toppng.com-warning-icon-2400x2400.png" alt="">
                    <p> Are you sure you want to delete this Token?</p>
                    <div class="actionButtons d-flex gap-3">
                        <button type="submit" class="btn btn-primary ">Yes</button>
                        <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">No</button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>
@* @ token model delete ends here @ *@




@*Assign table modal for delete *@
<div class="modal fade" id="AssignTableModal" tabindex="-1" data-bs-backdrop="static" data-bs-keyboard="false">
    <div class=" modal-dialog modal-dialog-centered">
        <div class="modal-content rounded-0">
            <div class="modal-header border-0">
                <h1 class="modal-title fs-5" id="exampleModalLabel">Assign Table</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form method="post" id="AssignTableWaitingListForm">
                <input type="hidden" id="AssignWaitingId">
                <input type="hidden" id="NoOFPerson">
                <div class="modal-body d-flex flex-column align-items-center">
                    <div class="row w-100 mb-4">
                        <div class="col-md-6 mb-3 mb-md-0">
                            <div class="form-floating">
                                <select class="form-select" aria-label="Floating label select example"
                                    id="floatingSection">
                                </select>
                                <label for="floatingSection">Section*</label>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-floating">
                                <button id="dropdownTableBtn" class="form-control form-select dropdown-toggle"
                                    type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                    <span>Select Tables</span>
                                </button>
                                <ul id="tableDropdown" class="dropdown-menu w-100" aria-labelledby="dropdownTableBtn">
                                    <!-- Options will be dynamically added here -->
                                </ul>
                                @* <input type="text" class="form-control mt-2" id="selectedTables" readonly
                                    placeholder="Selected tables will appear here"> *@
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-12 my-2 d-flex align-items-center gap-2" id="TableAppendDiv"></div>
                    </div>
                    <div class="actionButtons d-flex gap-3 align-items-center justify-content-end w-100">
                        <button type="submit" class="AssignTableBtn Btn btn btn-primary">Assign</button>
                        <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancel</button>

                    </div>
                </div>
            </form>
        </div>
    </div>
</div>
@* @ Assign table model delete ends here @ *@


<script>
    let sectionId = 0;
    const selectedTables = [];
    const tableIds = [];
    function WaitingList(sectionId) {
        $.ajax({
            url: '/OrderApp/GetWaitingList',
            type: 'Get',
            data: {
                'SectionId': sectionId,
            },
            success: function (data, status, xhr) {
                $("#LoadWaitingListContainer").html(data);
            },
            error: function (xhr, status, error) {
                console.log("No list-items Found", xhr, error)
            }
        });
    }

    function AddWaitingUserWaitingList() {

        $.ajax({

            url: '/OrderApp/AddWaitingUserWaitingList',
            type: 'GET',
            success: function (data) {

                $("#AddWaitingBtn").html(data);
                $('#AddWaitingListUsers').modal('show');
            },
            error: function (xhr, status, error) {

                console.error("AJAX Error:", status, error);

            }
        });
    }

    $(document).on("click", ".EditTokenBtn", function () {
        ;
        console.log($(this).attr("data-tokenId"));
        let TokenDeleteId = 0;
        let WaitingTokenId = $(this).attr("data-tokenId")

        $.ajax({
            url: '/OrderApp/LoadWaitingTokenDetails',
            type: 'GET',
            data: {
                'waitingId': WaitingTokenId
            },
            success: function (data) {
                $("#EditWaitingBtn").html(data);
                $('#EditWaitingListUsers').modal('show');
            },
            error: function (xhr, status, error) {
                console.log("No list-items Found", error)
            }
        });
    });


    $("#floatingSection").on("change", function (e) {
        debugger
        var sectionId = $("#floatingSection").val();
        tableSelectFunction(sectionId);
    })

    function tableSelectFunction(sectionId) {

        $.ajax({
            url: '/OrderApp/TableListBySectionId',
            type: 'GET',
            data: {
                'sectionId': sectionId
            },
            success: function (data) {
                debugger
                let dropdownItems = '<li><h6 class="dropdown-header">Select Tables</h6></li>';
                for (let i = 0; i < data.length; i++) {
                    dropdownItems += `
                    <li class="dropCapacity">
                        <label class="dropdown-item">
                            <input type="checkbox" class="form-check-input" data-table-id="${data[i].tableId}"  data-table-name="${data[i].tableName}" value="${data[i].tableId}">
                            ${data[i].tableName}(<span class="tableCapacity">${data[i].capacity}</span>)
                        </label>
                    </li>
                `;
                }
                $('#tableDropdown').html(dropdownItems);
            }
        });

        $('#tableDropdown').on('change', 'input[type="checkbox"]', function () {
            debugger
            updateSelectedTables();
            console.log(selectedTables);
        });
    }

    function updateSelectedTables() {
        debugger
        $('#tableDropdown input[type="checkbox"]').each(function () {
            const tableName = $(this).data('table-name');
            const tableId = $(this).data('table-id');


            if ($(this).prop('checked')) {
                if (!selectedTables.includes(tableId)) {
                    selectedTables.push(tableId);
                }
            } else {

                const index = selectedTables.indexOf(tableId);
                if (index > -1) {
                    selectedTables.splice(index, 1);
                }
            }
        });
        $('#selectedTables').val(selectedTables.join(', ') || "Select Tables");
        $('#selectedCount').text(selectedTables.length);
    }

    function sectionSelectFunction(sectionId) {
        $.ajax({
            url: '/OrderApp/SectionsList',
            type: 'GET',
            success: function (data) {

                var s = '<option value="-1">Please select Section</option>';
                for (var i = 0; i < data.length; i++) {
                    if (data[i].sectionId == sectionId) {
                        s += '<option value="' + data[i].sectionId + '" selected>' + data[i].sectionName + '</option>'
                    }
                    else {
                        s += '<option value="' + data[i].sectionId + '">' + data[i].sectionName + '</option>'

                    }
                }
                $("#floatingSection").html(s);
            }
        });
    }



    $(document).ready(function () {



        console.log("Inside WaitingList javascript...");
        @* let capacity = 0;
        let WaitingTokenId = 0;
        let SetOfIds = new Set();
        let ArrayOfIds = [] ;
        let totalperson = 0; *@

            WaitingList(sectionId);

        $(document).on("click", ".sectionName", function () {
            console.log("section Id:-", $(this).data("sectionid"))
            $(".sectionName").removeClass("text-secondary")
            $(".sectionName").removeClass("text-primary")
            $(".sectionName").removeClass("border-2 border-bottom")
            $(this).addClass("text-primary")
            $(this).addClass("border-2 border-primary border-bottom")
            sectionId = $(this).data("sectionid");
            WaitingList(sectionId);
        })

        $(document).on('click', '.WaitingTokenBtn', function () {

            AddWaitingUserWaitingList();
        });

        $(document).on("submit", "#EditWaitingListModal", function () {
            var Email = $('#Email').val();
            var UserName = $('#UserName').val();
            var PhoneNumber = $('#PhoneNumber').val();
            var NoOfPerson = $('#NoOfPerson').val();
            var SectionId = $('#EditWaitingListSelectSection').val();
            var WaitingId = $('#editWaitingId').val();

            var formData = {
                Email: Email,
                UserName: UserName,
                PhoneNumber: PhoneNumber,
                NoOfPerson: NoOfPerson,
                SectionId: SectionId,
                WaitingId: WaitingId
            };

            $.ajax({
                url: '/OrderApp/UpdateWaitingList',
                type: 'POST',
                data: formData,
                success: function (response) {


                    // Handle success
                    if (response.success) {
                        $('#EditWaitingListUsers').modal('hide');
                        location.reload();
                    } else {
                        toastr.error('Error: ' + response.message);
                    }
                },
                error: function (response) {

                    console.log(response);
                    toastr.error('Error updating item.');
                }
            });

        });

        $(document).on("click", ".DeleteTokenBtn", function () {
            var waitingId = $(this).data("tokenid")
            $('#waitingId').val(waitingId);
            $('#TokenDeleteModal').modal('show');
        });

        $(document).on("submit", "#DeleteWaitingToken", function () {

            var waitingId = $('#waitingId').val();

            $.ajax({
                url: '/OrderApp/DeleteWaiting',
                type: 'POST',
                data: {
                    'waitingId': waitingId
                },
                success: function (data) {

                    $('#TokenDeleteModal').modal('hide');
                    location.reload();
                },
                error: function (xhr, status, error) {
                    console.log("No list-items Found", error)
                }
            });

        });




        @* function sectionSelectFunction(sectionId) {

            $.ajax({
                url: '/OrderApp/SectionsList',
                type: 'GET',
                success: function (data) {
                    var s = '<option value="-1">Please select Section</option>';
                    for (var i = 0; i < data.length; i++) {
                        if (data[i].sectionId == sectionId) {
                            s += '<option value="' + data[i].sectionId + '" selected>' + data[i].sectionName + '</option>'
                        }
                        else {
                            s += '<option value="' + data[i].sectionId + '">' + data[i].sectionName + '</option>'

                        }
                    }
                    $("#floatingSection").html(s);
                }
            });
        } *@


            $(document).on("click", ".AssignTableIcon", function () {
                debugger
                var waitingId = $(this).data("tokenid");
                var sectionId = $(this).data("id");
                var capacity  = $(this).data("capacity")
                sectionSelectFunction(sectionId);
                tableSelectFunction(sectionId);

                $("#AssignWaitingId").val(waitingId);
                $("#NoOFPerson").val(capacity);


                $('#floatingSection').val(sectionId);

                $('#AssignTableModal').modal('show');
            });

        $(document).on("submit", "#AssignTableWaitingListForm", function (e) {
            debugger
            e.preventDefault();
            debugger
            if (selectedTables.length === 0) {
                toastr.error("Please select at least one table.");
                return; // Stop if no tables are selected
            }

            @* let capacity = 0

            let NoOfPerson = parseInt($("#NoOFPerson").val());

            $("input[type=checkbox]:checked").each(function(){
                console.log($(this));
                capacity += parseInt($(".dropdown-item").children("input:checked").parent().find(".tableCapacity").html());
                console.log(capacity);
            })


            if(NoOfPerson > capacity){
                toastr.error("Please Consider Joining Table")
                return;
            } *@

            var waitingId = parseInt($('#AssignWaitingId').val());
            let sectionId = $('#floatingSection').val();
            var tableIds = [...selectedTables];

            $.ajax({
                url: '/OrderApp/AddAssignWaitingList',
                type: 'POST',
                data: {
                    waitingId: waitingId,
                    sectionId: sectionId,
                    tableIds: tableIds
                },
                success: function (response) {
                    $('#AssignTableModal').modal('hide');
                    var url = '@Url.Action("MenuOrderApp", "OrderApp")' + '?Id=' + response.id;
                    window.location.href = url;
                },
                error: function (xhr, status, error) {

                    console.error("AJAX Error:", status, error);
                }
            });

        });
    });
</script>