@model PizzaShop.Entity.ViewModel.OrderAppMenuViewModel
@{
    var orderId = ViewBag.OrderId;
}

<style>
    .modifier-card-body {
        width: 150px;
        background-color: white;
        border-top-right-radius: 30px;
    }

    .selected {
        border: 2px solid #0066A8;
    }
</style>

<div class="modal fade show" id="add-modifiers-modal" tabindex="-1" aria-labelledby="exampleModalLabel"
    aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <form method="post" id="AddModifierInOrder">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="CategoryItemNameCard">
                        <h1 class="d-none" id="categoryItemPrice">
                            <h1 class="d-none" id="categoryItemTax">
                            </h1>
                            <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>

                <div class="modal-body ">
                    @if (!Model.SelectedModifierGroups.Any())
                    {
                        <div class="text-center">No Modifier Groups Applicable For This Item!</div>
                    }
                    @foreach (var modifierGroup in Model.SelectedModifierGroups)
                    {
                        <div class="modifier-group mb-3" data-group-id="@modifierGroup.ModifierGroupId"
                            data-min="@modifierGroup.MinValue" data-max="@modifierGroup.MaxValue"
                            data-name="@modifierGroup.ModifierGroupName">
                            <div><span class="fs-5 fw-semibold me-2">@modifierGroup.ModifierGroupName</span><small>(You can
                                    choose Minimum -
                                    @modifierGroup.MinValue & Maximum - @modifierGroup.MaxValue options)</small></div>
                            <div class="d-flex flex-wrap gap-3">
                                @if (!modifierGroup.ModifierLists.Any())
                                {
                                    <div class="text-center">No Modifier Items Applicable For This Item!</div>
                                }
                                @foreach (var modifier in modifierGroup.ModifierLists)
                                {

                                    <div class="modifier-card  border border-secondary rounded-1"
                                        onclick="selectModifierItem(this,@modifier.ModifierItemId,@modifierGroup.ModifierGroupId, @modifierGroup.MaxValue)"
                                        role="button" data-modifieritem-id="@modifier.ModifierItemId">
                                        <div class="modifier-card-body d-flex flex-column p-2">
                                            <span>@modifier.ModifierItemName</span>
                                            <small>Rs. @modifier.Rate</small>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    }
                </div>
                <div class="modal-footer ">
                    @if (orderId == 0)
                    {
                    }
                    else
                    {
                        <button id="add-btn" type="submit"
                            class="btn btn-primary bg-header me-2 rounded-1 px-3">Add</button>

                    }

                    <button type="button" class="btn text-primary bg-white text-header border-primary rounded-1 px-3"
                        data-bs-dismiss="modal">Close</button>
                </div>
            </div>

        </form>
    </div>
</div>


<script>
    function selectModifierItem(element, itemId, modifierId, MaxValue) {
        @* currentModifiers =  []; *@
        const modifier = {
            id: itemId,
            name: $(element).find('span:first').text(),
            price: parseFloat($(element).find('small:last').text().replace('Rs.', ''))

        };
        const currentSelectedModifierGroup = $(element).closest('.modifier-group').find('.modifier-card-body.selected').length;

        if ($(element).find(".modifier-card-body").hasClass('selected')) {

            $(element).find(".modifier-card-body").removeClass('selected');
            currentModifiers = currentModifiers.filter(m => m.id !== itemId);
        }
        else if (MaxValue <= currentSelectedModifierGroup) {
            toastr.error("You can select maximum " + MaxValue + " modifiers from this group.");
        }

        else {
            $(element).find(".modifier-card-body").addClass('selected');

            currentModifiers.push(modifier);
        }
    }

    $("#AddModifierInOrder").submit(function (e) {

        e.preventDefault();
        let isValid = true;

        $(".modifier-group").each(function () {

            const groupId = $(this).data("group-id");
            const groupName = $(this).data("name");
            const min = $(this).data("min");
            const max = $(this).data("max");
            const selectedModifiers = $(this).find(".modifier-card-body.selected").length;

            if (selectedModifiers < min || selectedModifiers > max) {
                toastr.error("Please select between " + min + " and " + max + " modifiers for group : " + groupName);
                isValid = false;
            }
        });

        if (!isValid) {
            return;
        }


        const itemName = $("#exampleModalLabel").text();
        const itemPrice = parseFloat($(this).find("#categoryItemPrice").text().trim());
        const itemTax = parseFloat($(this).find("#categoryItemTax").text().trim());

        addToOrder({
            ItemId: currentItemId,
            name: itemName,
            price: itemPrice,
            modifiers: currentModifiers,
            quantity: 1,
            ItemTax: itemTax,
        });
        currentModifiers = [];
        $("#add-modifiers-modal").modal('hide');
    });




</script>
