@model PizzaShop.Entity.ViewModel.OrderAppOrderDetailsViewModel
@{
    ViewData["Title"] = "Order";
}

<div>
    
    <div class="d-flex justify-content-between">

        <div class="d-flex">
            <img src="/images/icons/dinner-table.svg" alt="" style="height:50px; width: 50px;padding: 5px">
            <div>
                <p class="m-0 p-0">@Model.SectionName</p>
                @foreach (var table in @Model.TableList)
                {
                    <span>@table</span>
                    @if (Model.TableList.Last() != table)
                    {
                        <span>,</span>
                    }
                }
            </div>

        </div>
        <div>
            <button class="btn btn-outline-primary" data-bs-toggle="modal" data-bs-target="#QrCodeModel" data-orderid="@Model.OrderId"> 
                <i class="bi bi-qr-code-scan"></i></button>
            <button data-customerid="@Model.CustomerId" class="btn btn-outline-primary" id="CustomerDetailButton"> <i
                    class="bi bi-person-lines-fill"></i></button>
            <button data-orderid="@Model.OrderId" id="OrderWiseCommentButton" class="btn btn-outline-primary"><i
                    class="bi bi-chat-left-text"></i></button>
        </div>
    </div>

    <div class="table-responsive">
        <table class="table">
            <thead>
                <tr>
                    <th colspan="6">Item</th>
                    <th>Quantity</th>
                    <th>Amount</th>
                    <th></th>
                </tr>
            </thead>
            <tbody class="BillBody">
                @if (Model.OrderItem.Count() != 0)
                {
                    @foreach (var item in Model.OrderItem)
                    {
                        <tr class="p-2 OldOrderItem" data-id="@item.OrderDetailId" data-orderid="@Model.OrderId" data-itemid="@item.ItemId"
                            style="border:2px solid rgb(67, 65, 65); border-radius: 7px; ">
                            <td colspan="6">
                                <i class="bi bi-chevron-compact-down"></i>
                                <span id="ItemName-@item.ItemId">@item.ItemName</span>
                                <span id="ItemTax-@item.ItemId"> @item.TaxPercentage</span>
                                @foreach (var modifier in @item.modifier)
                                {
                                    <li class="gap-2 modifier-item "><span class="modifier-name">@modifier.ModifierName</span>
                                        <span class="d-none modifier-id"
                                            data-modifier-id=@modifier.ModifierId>@modifier.ModifierId</span>
                                        <span class=" modifier-price">@modifier.ModifierPrice <span>₹</span></span>
                                    </li>
                                }

                            </td>
                            <td>
                                <div class="p-2 d-flex justify-content-around align-items-center quantity-box"
                                    data-id="@item.OrderDetailId" style="border:2px solid rgb(67, 65, 65); border-radius: 7px;">
                                    <i class="bi bi-dash quantity-decrease" role="button"></i>
                                    <span class="TotalQuantity-@item.OrderDetailId">@item.Quantity</span>
                                    <i class="bi bi-plus-lg quantity-increase" role="button"></i>
                                </div>
                            </td>
                            <td>
                                <div class="d-flex flex-column">
                                    <span class="price-item-@item.OrderDetailId">@item.Price ₹</span>
                                    @{
                                        var total = 0.0;
                                        foreach (var modifier in @item.modifier)
                                        {
                                            total += modifier.ModifierPrice;

                                        }
                                        total *= @item.Quantity;
                                    }
                                    <span class="modifier-price-total">@total<span>₹</span></span>

                                </div>
                            </td>
                            <td>
                                <i class="bi bi-trash"></i>
                            </td>

                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="4"> No Any Order</td>

                    </tr>
                }



            </tbody>
        </table>
        
        <div>
            <div class="d-flex justify-content-between ">
                <span>Sub Total</span>
                <p>
                    <span id="subtotal"></span>₹
                </p>
            </div>
            @foreach (var tax in @Model.tax)
            {
                <div class="d-flex justify-content-between Taxes">
                    <span class="ItemTaxName" data-taxName="@tax.TaxName" data-taxtype="@tax.TaxType"
                        data-taxvalue="@tax.TaxValue">
                        @tax.TaxName
                    </span>
                    <span class="ItemTaxAmount">0.00 ₹</span>
                </div>

            }
            <div class="d-flex justify-content-between">
                <span>Other</span>
                <span id="other">0.00</span>
            </div>
            <div class="d-flex justify-content-between">
                <span>TOTAL</span>
                <span id="total-amount">0.00₹</span>
            </div>
            <div class="d-flex justify-content-between">
                <p>Payment method </p>
                <div class="d-flex text-align-center gap-2 selectPaymentmethod" data-orderid="@Model.OrderId">
                    <input type="radio" id="Cash" name="paymentmethod" value="Cash" @(Model.PaymentMode == "Cash" ?
                        "checked" : "")>
                    <label class="m-auto" for="Cash">Cash</label>
                    <input type="radio" name="paymentmethod" id="Card" value="Card" @(Model.PaymentMode == "Card" ?
                        "checked" : "")>
                    <label class="m-auto" for="Card">Card</label>
                    <input type="radio" name="paymentmethod" id="UPI" value="Upi" @(Model.PaymentMode == "Upi" ?
                        "checked" : "")>
                    <label class="m-auto" for="UPI">UPI</label>
                </div>
            </div>
            <div class="d-flex justify-content-end gap-3">
                <button type="button" class="btn btn-primary saveBtn">Save</button>
                <button type="button" class="btn btn-outline-primary completeBtn" data-customerid="@Model.CustomerId">Complete</button>
                <button type="button" class="btn btn-outline-primary">Generate Invoice</button>
            </div>
            <div class="d-flex justify-content-end mt-3">
                <button class="btn btn-outline-primary cancelBtn" data-customer-id="@Model.CustomerId">Cancel</button>

            </div>

        </div>

    </div>

</div>


<partial name="./PartialView/QRCode">
<script>

    $(document).on("change", ".selectPaymentmethod input", function () {
        var selectedValue = $(this).val();
        var orderId = $(this).closest(".selectPaymentmethod").data("orderid");

        $.ajax({
            type: "POST",
            url: "/OrderApp/UpdatePaymentMethod",
            data: { orderId: orderId, paymentMethod: selectedValue },
            success: function (response) {
                if (response.success == true) {
                    toastr.success("Payment method updated successfully.");
                }
                else {
                    toastr.error("Failed to update payment method.");
                }
            },
            error: function (error) {
                console.error("Error updating payment method:", error);
            }
        });
    });

    $(document).on("click", "#CustomerDetailButton", function () {
        
        var customerId = $(this).data("customerid");
        $.ajax({
            type: "GET",
            url: "/OrderApp/GetCustomerDetail",
            data: { customerId: customerId },
            success: function (response) {
                
                $("#CustomerDetailDivModal").html(response);
                $("#CustomerDetailModal").modal("show");
            },
            error: function (error) {
                console.error("Error loading customer details:", error);
            }
        });
    });

    $(document).on("click", "#OrderWiseCommentButton", function () {
        var orderId = $(this).data("orderid");
        $.ajax({
            type: "GET",
            url: "/OrderApp/GetOrderWiseComment",
            data: { orderId: orderId },
            success: function (response) {
                $("#OrderWiseCommentDivModal").html(response);
                $("#orderWiseCommentModel").modal("show");
            },
            error: function (error) {
                console.error("Error loading order wise comment:", error);
            }
        });
    });

    function CalculateTax() {
        
        var subtotal = parseFloat($("#subtotal").html());
        var other = parseFloat($("#other").text().replace("₹", ""));
        var taxValue = 0;
        var totalTaxValue = 0;
        var value = 0;
        var total = 0;
        if (subtotal != 0) {
            $(".ItemTaxAmount").each(function () {

                var taxType = $(this).prev().data("taxtype");
                var taxValue = $(this).prev().data("taxvalue");

                if (taxType == "Percentage") {
                    value = (subtotal * taxValue) / 100;
                    $(this).html(value + "₹");
                } else if (taxType == "FlatAmount") {
                    value = taxValue;
                    $(this).html(value + "₹");
                }
            });
        }

        $(".ItemTaxAmount").each(function () {
            var taxValue = parseFloat($(this).text().replace("₹", ""));
            totalTaxValue += taxValue;
        });


        var totalAmount = subtotal + totalTaxValue + other;

        $("#total-amount").text(`${totalAmount.toFixed(2)}₹`);

    }


    $(document).ready(function () {

        $(document).on('click', '.quantity-increase', function () {
            const container = $(this).closest('.quantity-box');
            const itemId = container.data('id');
            let qtyElem = container.find('.TotalQuantity');
            let currentQty = parseInt(qtyElem.text());
            qtyElem.text(currentQty + 1);

            updateOrderUI();
        });

        $(document).on('click', '.quantity-decrease', function () {
            const container = $(this).closest('.quantity-box');
            const itemId = container.data('id');
            let qtyElem = container.find('.TotalQuantity');
            let currentQty = parseInt(qtyElem.text());

            if (currentQty > 1) {
                qtyElem.text(currentQty - 1);
                updateOrderUI();

            }
        });

        $(".OldOrderItem").each(function () {
            
            var $row = $(this);
            var orderDetailId = $row.data("id");
            var orderId =$row.data("orderid");
            var ItemId = $row.data("itemid");
            var ItemName = $(`#ItemName-${ItemId}`).html();
            var TotalQuantity = parseInt($(`.TotalQuantity-${orderDetailId}`).html().trim());
            var itemPrice = parseFloat($(`.price-item-${orderDetailId}`).text().trim())
            var ItemTax = $(`#ItemTax-${ItemId}`).html().trim();


            var modifiers = [];
            $row.find('.modifier-item').each(function () {
                var $mod = $(this);
                modifiers.push({
                    modId: $mod.find(".modifier-id").data("modifier-id"),
                    name: $mod.find('.modifier-name').text(),
                    price: parseFloat($mod.find(".modifier-price").text())
                });
            });

            orderItems.push({
                ItemId: ItemId,
                orderId: orderId,
                orderDetailId: orderDetailId,
                name: ItemName,
                price: itemPrice,
                modifiers: modifiers,
                quantity: TotalQuantity,
                ItemTax: ItemTax,
            })

        });

        updateOrderUI();
        CalculateTax();
    });


</script>