@{
    Layout = "~/Views/Shared/_OrderAppLayout.cshtml";
    ViewData["Title"] = "Kot";
}
@model PizzaShop.Entity.ViewModel.KOTMainViewModel
<style>
    .hd-cl {
        color: #0066A7;
    }

    .cardBorder {
        border: 1px dashed;
        border-radius: 5px;
        border-color: gray;
    }

    .arrow-border {
        border: 1px solid #0066A7 !important;
    }

    .active {
        background-color: #0066A7 !important;
        color: white !important;
    }
</style>

<div class="d-flex px-5 py-2">
    <h2 class="hd-cl">KOT</h2>
</div>


<div class="d-flex flex-column gap-3 px-5 py-2 mb-2" id="">
    <ul class="nav nav-underline bg-white  px-4 py-1 shadow" id="categoryTabs" role="tablist">
        <li class="nav-item" role="presentation">
            <button class=" btn nav-link active text-dark category-tab" data-category="All">All</button>
        </li>
        @foreach (var category in Model.Categories)
        {
            <li class="nav-item">
                <button class=" btn nav-link text-dark category-tab" data-category="@category">@category</button>
            </li>
        }
    </ul>
</div>


<div class="ms-5 me-5 bg-white p-4 mt-1 shadow">
    <div class="d-flex justify-content-between align-items-center mb-3 ms-1 me-1 bg-white row">
        <div class="col">
            <h5 class="hd-cl" id="currentCategory">All</h5>
        </div>
        <div class="col d-flex justify-content-end">
            <button class="btn btn-primary btn-sm me-1 status-btn" data-status="InProgress">InProgress</button>
            <button class="btn btn-outline-primary btn-sm me-2 status-btn" data-status="Ready">Ready</button>


            <button class="btn btn-outline-secondary btn-sm me-1 arrow-border" id="prev-btn">
                <i class="bi bi-chevron-left" id="prevPage"></i>
            </button>


            <button class="btn btn-outline-secondary btn-sm arrow-border" id="next-btn">
                <i class="bi bi-chevron-right" id="nextPage"></i>
            </button>

        </div>
    </div>
    <div class="row row-cols-1 row-cols-md-4 g-3" id="cardContainer">


        @Html.Partial("./PartialView/_KOTCardsPartial", Model.Orders)

    </div>
</div>

<div class="modal fade" id="kot-order-modal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                @* <h4>Order ID: #223</h4> *@
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body text-center">
                <div class="text-secondary d-flex justify-content-between border-secondary border-bottom fw-bold p-2">
                    <span>Item</span>
                    <span>Quantity</span>
                </div>
                @for (int i = 0; i < 2; i++)
                {
                    <div class="d-flex justify-content-between p-2">
                        <div>
                            <div class="form-check ">
                                <input class="form-check-input" type="checkbox" value="" id="checkChecked">
                                <label class="form-check-label" for="checkChecked">
                                </label>
                            </div>
                            <ul class="m-1 text-start">
                                @for (int j = 0; j < 2; j++)
                                {
                                    <li class="text-secondary"><small>Tomato</small> </li>
                                }
                            </ul>
                        </div>
                        <div class="quantity-btn border-primary rounded-1 border">
                            <div class="input-group d-flex align-items-center justify-content-between">
                                <span class="input-group-btn">
                                    <button type="button" class="quantity-left-minus btn btn-number" data-id="@i"
                                        data-type="minus" data-field="">
                                        <i class="bi bi-dash-lg"></i>
                                    </button>
                                </span>
                                <div style="width: 50px;">
                                    <input type="text" id="@i-quantity" name="quantity"
                                        class="form-control input-number border-0" value="10" min="1" max="100">
                                </div>
                                <button type="button" class="quantity-right-plus btn btn-number" data-id="@i"
                                    data-type="plus" data-max="15" data-field="">
                                    <i class="bi bi-plus-lg "></i>
                                </button>
                            </div>
                        </div>
                    </div>
                }
            </div>
            <div class="modal-footer mb-3">
                <button id="update-status-btn" type="button" class="btn btn-primary bg-header me-2 rounded-0 px-3">Mark
                    As
                    Prepared</button>
                <button type="button" class="btn text-primary bg-white text-header border-primary rounded-0 px-3"
                    data-bs-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>


<script>
    let currentCategory = 'All';
    let currentStatus = 'InProgress';
    let page = 0;
    let totalOrders = @Model.Orders.Count();
    let displayCount = 4;
    let swiper;

    function fetchCards() {
        $.ajax({
            url: '/OrderApp/LoadKOTPartial',
            type: 'GET',
            data: { category: currentCategory, status: currentStatus, page: page },
            success: function (res) {
                start = 0;
                
                $('#cardContainer').html(res);
                updateLiveTimes();
                
            }
        });
    }



    function updateLiveTimes() {
        $('.live-time').each(function () {
            const orderTime = new Date($(this).data('order-time'));
            const now = Date.now();
            const diff = Math.floor((now - orderTime) / 1000);
            const days = Math.floor(diff / 86400);
            const hours = Math.floor((diff % 86400) / 3600);
            const minutes = Math.floor((diff % 3600) / 60);
            const seconds = diff % 60;
            $(this).text(`${days}d ${hours}h ${minutes}m ${seconds}s`);
        });
    }

    $(document).ready(function () {
        window.start = 0;
        window.end = @Model.Orders.Count() <= 4 ? @Model.Orders.Count() - 1 : 3;
        
          

       

            $('.nav-link').click(function () {
                $('.nav-link').removeClass('active');
                $(this).addClass('active');
                currentCategory = $(this).data('category');
                $('#currentCategory').text(currentCategory);
                page = 0;
                fetchCards();
            });

        $('.status-btn').click(function () {
            $('.status-btn').removeClass('btn-primary').addClass('btn-outline-primary');
            $(this).removeClass('btn-outline-primary').addClass('btn-primary');
            currentStatus = $(this).data('status');
            page = 0;
            fetchCards();
        });


            $(document).on("click", ".card-modal", function (e) {
                e.preventDefault();
                let orderId = $(this).data("order-id");
                $.get("/OrderApp/GetOrderItemsModal", {
                    orderId: orderId,
                    category: currentCategory,
                    status: currentStatus
                }, function (res) {
                    $("#kot-order-modal .modal-content").html(res);
                    $("#kot-order-modal").modal("show");
                });

            })

        $(document).on("click", "#update-status-btn", function () {
            
            let selectedIds = [];
            let quantities = {};
            let orderId = $(this).data("order-id");
            $(".item-checkbox:checked").each(function () {
                var quantity = $(this).parents(".orderitemquantity").find(".qty-input");
                quantities[$(this).val()] = quantity.val();
                selectedIds.push(parseInt($(this).val()));
            });

                let newStatus = $(this).data("status");

            if (selectedIds <= 0) {
                toastr.error("Please select at least one item");
                return;
            }
            $.ajax({
                url: "/OrderApp/UpdateOrderItems",
                type: "POST",
                data: {
                    selectedItemIds: selectedIds,
                    orderId: orderId,
                    newStatus: newStatus,
                    updatedQuantities: quantities
                },
                success: function (response) {
                    if (response.success) {
                        $(".nav-link.active").click();
                        toastr.success(response.message);
                        fetchCards();
                        $("#kot-order-modal").modal("hide");
                    }
                    else {
                        $(".nav-link.active").click();
                        toastr.error(response.message);
                        $("#kot-order-modal").modal("hide");
                        fetchCards();
                    }
    
                }
            });
        });




        $(document).on("click", ".quantity-left-minus", function () {
            let id = $(this).data("id");
            let input = $(`.qty-input[data-id='${id}']`);
            let val = parseInt(input.val());
            if (val > 1) input.val(val - 1);
        });

        $(document).on("click", ".quantity-right-plus", function () {
            let id = $(this).data("id");
            let max = $(this).data("max");
            let input = $(`.qty-input[data-id='${id}']`);
            if (parseInt(input.val()) < parseInt(max)) {
                let val = parseInt(input.val());
                input.val(val + 1);
            }

        });

        fetchCards();
    });

</script>